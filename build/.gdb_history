run
r
bt
r
bt
r
bt
r
r
bt
r
bt
r
bt
r
bt
r
r
bt
print queue
r
bt
list
asmsearch 
b checkEmpty() 
r
s
n
n
n
n
r
b checkEmpty() 
r
r
info threads
run
bt
bt
info threads
bt
info threads
info threads
info threads
info threads
thread 1
bt
print I
print L
print L
thread 2
print I
print L
print node_array 
print node_array[1
print node_array[1]
bt
frame 1
print node_array[1]
print node_array
print &node_array
print &node_array+1
print &node_array[1]
print &node_array[0]
print L
thread 1
print I
thread 2
print I
bt
frame 1
print &node_array[0]
print &node_array[1]
r
bt
bt
info threads
thread 1
bt
bt
info threads 
disassemble release_lock 
list
bt
thread 2
disassemble acquire_lock 
bt
thread 2
thread 2
print predecessor 
print *predecessor 
bt
print *predecessor 
print *I
print *L
print I
thread 1
bt
bt
r
bt
bt
threads
info threads
thread 2
bt
bt
bt
info thread
thread 2
bt
print predecessor 
print *predecessor 
print i
print I
print *I
thread 1
bt
print I
print *I
r
bt
r
bt
info threads
bt
print i
print I
print *I
thread 2
print *I
print L
print predecessor 
print *predecessor 
bt
disassemble GithubMCS
disassemble GithubMCS
disassemble MCSspinlock::unlock() 
bt
info threads 
thread 2
bt
c
c
disassemble GithubMCS
disassemble testLockInterferenceGithub
disassemble M
disassemble testLockInterference
tui 
tui enable 
layout split 
tui disable 
disassemble /m testLockInterference
disassemble /m MCSspinlock::lock
disassemble /m testLockInterference
disassemble /m testLockInterferenceGithub() 
disassemble /m testLockInterferenceGithub
disassemble /m testLockInterferenceGithub
disassemble  testLockInterferenceGithub 
disassemble /s testLockInterferenceGithub
disassemble /s testLockInterferenceGithub
disassemble /s testLockInterferenceGithub
disassemble MCSspinlock::lock() 
disassemble MCSspinlock::lock()
disassemble MCSspinlock::lock() 
set overload-resolution off
disassemble MCSspinlock::lock() 
run 
disassemble MCSspinlock::lock() 
b main
run 
disassemble MCSspinlock::lock() 
disassemble MCSspinlock::lock
disassemble GithubMCS::lock() 
disassemble GithubMCS::lock
disassemble GithubMCS::unlock
disassemble MCSspinlock::lock() 
disassemble MCSspinlock::lock
disassemble MCSspinlock::lock
disassemble MCSspinlock::lock
disassemble GithubMCS::unlock
disassemble MCSspinlock::unlock
disassemble MCSspinlock::lock
disassemble MCSspinlock::unlock
disassemble MCSspinlock::lock
disassemble GithubMCS::unlock
disassemble GithubMCS::lock
disassemble GithubMCS::lock
disassemble MCSspinlock::lock
disassemble GithubMCS::unlock
disassemble MCSspinlock::unlock
bt
bt
disassemble MCSspinlock::lock
disassemble GithubMCS::lock
bt
